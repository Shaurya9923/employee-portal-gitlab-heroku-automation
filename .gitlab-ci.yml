stages:
  - test
  - build
  - deploy feature
  - automated feature testing
  - deploy staging
  - automated testing
  - deploy production

variables:
  CI_REGISTRY_IMAGE_DETAILS: registry.gitlab.com/shaurya_mehta/employee-portal
  STAGING_APP: emp-portal-stagee
  PRODUCTION_APP: emp-portal-production2
  HEROKU_STAGING: "registry.heroku.com/$STAGING_APP/web"
  HEROKU_PRODUCTION: "registry.heroku.com/$PRODUCTION_APP/web"
  DOCKER_AUTH_CONFIG: '{ "auths": { "https://index.docker.io/v1/": { "auth": "$DOCKER_AUTH" } }}'
  # $CI_REGISTRY_IMAGE = registry.gitlab.com/shaurya_mehta/employee-portal

lint_test:
  stage: test
  image: python:3.8.0-slim
  
  before_script:
    - pip install flake8-html
  script:
    - flake8 --format=html --htmldir=flake-report
  artifacts:
    when: always
    paths:
      - flake-report/
  
pytest:
  stage: test
  image: python:3.8.0-slim

  before_script:
    - pip install pytest-html
    - pip install -r requirements.txt
  script:
    - pytest --html=pytest_reports/pytest_reports.html
  artifacts:
    when: always
    paths:
      - flake-report/

build:
  image: docker:latest
  services: 
    - docker:dind
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script: 
    - docker build -t $CI_REGISTRY_IMAGE_DETAILS/employee-image:$CI_COMMIT_SHORT_SHA .
    - docker images
    - docker push $CI_REGISTRY_IMAGE_DETAILS/employee-image:$CI_COMMIT_SHORT_SHA

deploy_feature:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy feature
  environment: 
    name: review_feature_deploy/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.herokuapp.com/
  before_script: 
    - export FEATURE_APP="$CI_ENVIRONMENT_SLUG"
    - export HEROKU_FEATURE="registry.heroku.com/$FEATURE_APP/web"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "FEATURE_APP=$CI_ENVIRONMENT_SLUG" >> deploy_feature.env
    - docker pull $CI_REGISTRY_IMAGE_DETAILS/employee-image:$CI_COMMIT_SHORT_SHA
    - docker tag  $CI_REGISTRY_IMAGE_DETAILS/employee-image:$CI_COMMIT_SHORT_SHA $HEROKU_FEATURE
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_STAGING_API_KEY wingrunr21/alpine-heroku-cli create $FEATURE_APP
    - docker login -u _ -p $HEROKU_STAGING_API_KEY registry.heroku.com
    - docker push $HEROKU_FEATURE
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_STAGING_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $FEATURE_APP
    - echo "App deployed to feature server at https://$FEATURE_APP.herokuapp.com/"
  artifacts:
    reports:
      dotenv: deploy_feature.env
  only:
    - /^feature-.*$/

test_feature:
  image: alpine
  stage: automated feature testing
  before_script:
    - apk --no-cache add curl
  script:
    - curl https://$STAGING_APP-65a788e78104.herokuapp.com/ | grep "Employee Data"
  dependencies:
    - deploy_feature
  only:
    - /^feature-.*$/
  

deploy_stage:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy staging
  environment: 
    name: staging
    url: https://emp-portal-stagee-65a788e78104.herokuapp.com/
  before_script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE_DETAILS/employee-image:$CI_COMMIT_SHORT_SHA
    - docker tag  $CI_REGISTRY_IMAGE_DETAILS/employee-image:$CI_COMMIT_SHORT_SHA $HEROKU_STAGING
    - docker login -u _ -p $HEROKU_STAGING_API_KEY registry.heroku.com
    - docker push $HEROKU_STAGING
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_STAGING_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $STAGING_APP
    - echo "App deployed to staging server at https://$STAGING_APP.herokuapp.com/"
  only:
    - main

  
test_stage:
  image: alpine
  stage: automated testing
  before_script:
    - apk --no-cache add curl
  script:
    - curl https://$STAGING_APP-65a788e78104.herokuapp.com/ | grep "Employee Data"
  only:
    - main

deploy_production:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy production
  environment: 
    name: production
    url: https://emp-portal-production2-1be84037576a.herokuapp.com/
  before_script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE_DETAILS/employee-image:$CI_COMMIT_SHORT_SHA
    - docker tag  $CI_REGISTRY_IMAGE_DETAILS/employee-image:$CI_COMMIT_SHORT_SHA $HEROKU_PRODUCTION
    - docker login -u _ -p $HEROKU_PRODUCTION_API_KEY registry.heroku.com
    - docker push $HEROKU_PRODUCTION
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_PRODUCTION_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $PRODUCTION_APP
    - echo "App deployed to production server at https://$PRODUCTION_APP.herokuapp.com/"
  only:
    - main
  when: manual